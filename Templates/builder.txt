(() => {
  if (window.clockRunning) return; // prevent multiple instances

  const clockCanvas = document.createElement('canvas');
  clockCanvas.id = 'clockCanvas';
  clockCanvas.width = 200;
  clockCanvas.height = 200;
  Object.assign(clockCanvas.style, {
    position: 'fixed',
    top: '10px',
    right: '10px',
    zIndex: '9999',
    background: 'rgba(34, 34, 34, 0.35)',
    borderRadius: '50%',
    boxShadow: '0 0 15px rgba(0,0,0,0.7)',
  });
  document.body.appendChild(clockCanvas);

  const ctx = clockCanvas.getContext('2d');
  const radius = clockCanvas.height / 2;
  ctx.translate(radius, radius);

  window.clockRunning = true;

  function drawClock() {
    if (!window.clockRunning) return;
    ctx.clearRect(-radius, -radius, clockCanvas.width, clockCanvas.height);

    const now = new Date();
    const hour = now.getHours() % 12;
    const minute = now.getMinutes();
    const second = now.getSeconds();

    function drawHand(pos, length, width, color) {
      ctx.beginPath();
      ctx.lineWidth = width;
      ctx.lineCap = "round";
      ctx.strokeStyle = color;
      ctx.moveTo(0, 0);
      ctx.rotate(pos);
      ctx.lineTo(0, -length);
      ctx.stroke();
      ctx.rotate(-pos);
    }

    // Face
    ctx.beginPath();
    ctx.arc(0, 0, radius, 0, 2 * Math.PI);
    ctx.fillStyle = 'rgba(34,34,34,0.5)';
    ctx.fill();

    // Center dot
    ctx.beginPath();
    ctx.arc(0, 0, 5, 0, 2 * Math.PI);
    ctx.fillStyle = '#fff';
    ctx.fill();

    // Hands
    const hourAngle = (hour * Math.PI / 6) + (minute * Math.PI / (6 * 60));
    const minAngle = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
    const secAngle = second * Math.PI / 30;

    drawHand(hourAngle, radius * 0.5, 6, '#fff');
    drawHand(minAngle, radius * 0.8, 4, '#fff');
    drawHand(secAngle, radius * 0.9, 2, '#f00');

    requestAnimationFrame(drawClock);
  }

  drawClock();
})();
